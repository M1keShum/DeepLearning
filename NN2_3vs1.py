"""Нейронная сеть с несколькими входами и одним выходом"""
############################################################

"""Сеть, написанная самостоятельно:"""
# weights = [0.1, 0.2, 0]  # Трое весов
#
# toes = [8.5, 9.5, 9.9, 9.0]  # среднее количество игр. Точка данных №1
# wlrec = [0.65, 0.8, 0.8, 0.9]  # процент побед. Точка данных №2
# nfans = [1.2, 1.3, 0.5, 1.0]  # количество фанатов. Точка данныых №3
#
# input = [toes[0], wlrec[0], nfans[0]]  # 3 точки данных
#
# # Количество точек данных должно быть равно количеству весов
#
#
# def w_sum(a, b):
#     assert(len(a) == len(b))  # Если условие в скобках не выполняется, то выдаст ошибку
#     output = 0
#     for i in range(len(a)):
#         output += (a[i]*b[i])  # Каждая точка данных(каждое входное значение) умножается на свой весовой коэффициент.\
#         # Таким образом получаются 3 частных прогноза, полученные от анализа разных типов данных, которые затем\
#         # суммируются (прогноз по числу игр + прогноз по проценту побед + прогноз по количеству фанов)
#     return output
#
#
# def neural_network(input, weights):
#     pred = w_sum(input, weights)
#     return pred
#
#
# pred = neural_network(input, weights)  # Передаём в функцию нужные данные(точки данных и весы)
#
# print(pred)


"""Та же самая сеть, но написанная с использованием библиотеки Numpy:"""
import numpy as np

weights = np.array([0.1, 0.2, 0])


def neural_network(input, weights):
    pred = input.dot(weights)
    return pred


toes = np.array([8.5, 9.5, 9.9, 9.0])
wlrec = np.array([0.65, 0.8, 0.8, 0.9])
nfans = np.array([1.2, 1.3, 0.5, 1.0])

input = np.array([toes[0], wlrec[0], nfans[0]])
pred = neural_network(input, weights)

print(pred)







